#include<stdio.h> 
#include<conio.h>
#include<stdlib.h>

void Round_Robin(int nnn,int REM_TT[10],int Cur_t,int ART[10], int BT[10]);

void main() 
{
	int prr,j,nnn,curr_T,Rem_P,ind,tq,ww,tut,ART[10],BT[10],REM_TT[10],x=1;
	ind = 0;
	ww = 0;
	tut = 0;
	printf("Total No of Process:-"); 
	scanf("%d",&nnn);
	Rem_P = nnn;
	
	printf("\nArrival Time and Burst Time:-\n");
	for(prr = 0;prr < nnn;prr++) 
	{
		printf("\nFor Process P%d\n",prr+1);
		printf("A_TIME= "); 
		scanf("%d",&ART[prr]);
		printf("B_TIME= "); 
		scanf("%d",&BT[prr]); 
		REM_TT[prr]=BT[prr]; 
	} 
	printf("RR part 01- For Time-Quantum :-3.\n"); 
	tq=3;
	curr_T=0;
	for(prr=0;Rem_P!=0;) 
	{
		if(REM_TT[prr]<=tq && REM_TT[prr]>0)
		{ 
			curr_T+=REM_TT[prr]; 
			REM_TT[prr]=0; 
			ind=1; 
		} 
		else if(REM_TT[prr]>0)
		{ 
			REM_TT[prr]-=tq; 
			curr_T+=tq; 
		} 
		if(REM_TT[prr]==0 && ind==1)			
		{ printf("%d",prr);
			Rem_P--;				
			printf("P %d",prr+1); 
			printf("\t\t\t%d",curr_T-ART[prr]);
			printf("\t\t\t%d\n",curr_T-BT[prr]-ART[prr]);
			ww+=curr_T-ART[prr]-BT[prr]; 
			tut+=curr_T-ART[prr]; 
			ind=0; 
                       
		} 
		if(prr==nnn-1){
			x++;
			if(x==2){
				prr=0;
				tq=6;
				printf("DONE\n");
				printf("RR part-02 Now For Time Quantum = 6. \n");
				printf("DONE\n");
			}
			else{
				break;
			}
		}
		else if(curr_T >= ART[prr+1]){
			prr++;
		}
		else{
			prr=0;
		}
	}
	
	Round_Robin(nnn,REM_TT,curr_T,ART,BT);
	
	return 0;
}


void Round_Robin(int nnn,int REM_TT[10],int Cur_t,int ART[10], int BT[10]){
	
	float avg_ww,avg_tut;
    int i,j,n=nnn,temp,B_T[20],prr[20],w_time[20],tut_t[20],total=0,LO;
    
    printf("\nThird round is Shortest Job First.\n");
    
    
    for(i=0;i<n;i++)
    {
        B_T[i]=REM_TT[i];
        w_time[i]=Cur_t-ART[i]-B_T[i];
		prr[i]=i+1;
    }
	
    for(i=0;i<n;i++)
    {
        LO=i;
        for(j=i+1;j<n;j++)
        {
            if(B_T[j]<B_T[LO]){
            	LO=j;
            }
        }
        temp=B_T[i];
        B_T[i]=B_T[LO];
        B_T[LO]=temp;
        temp=prr[i];
        prr[i]=prr[LO];
        prr[LO]=temp;
    }
	
    for(i=1;i<n;i++)
    {
        for(j=0;j<i;j++){
        	w_time[i]+=abs(B_T[j]);
        }
        total+=w_time[i];
    }
 
    avg_ww=(float)total/n;
    total=0;
    
    for(i=0;i<n;i++)
    {
        tut_t[i]=abs(B_T[i])+abs(w_time[i]);
        total=total + tut_t[i];
        
    }
    avg_tut=(float)total/n;
    printf("DONE\n");
    printf("\n\nAverage waiting time = %.2f",avg_ww);
    printf("\nAverage turnaround time = %.2f\n",avg_tut);
	
}
